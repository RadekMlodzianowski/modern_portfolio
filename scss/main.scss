@import "config";
@import "menu";

// @import "mobile"; pwinno niżej ??? bo gdy jest tutaj to zawarte w nim media queries są nadpisywane przez zawartość tego pliku, czyli main.scss (patrz komentarz pod 4 częścią poradnika - użytkowanik xenocrat 666)


* {
  // padding nie będzie obcinało elementów:
  box-sizing: border-box;
}

body {
  @include background();
  background: $primary-color;
  color: set-text-color($primary-color);
  height: 100%;
  margin: 0;
  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  // Odległość pomiędzy liniami:
  line-height: 1.5;
}

// Headings
h1,
h2,
h3 {
  margin: 0;
  font-weight: 400;

  // Dodajemy "&" przed bo .lg-heading nie jest w elemencie h1, h2, h3 jako children tylko h1, h2, h3 (w zasadzie h1) zawiera klasę .lg-heading

  // To nestowanie CSS jest możliwe dzięki SASS
  &.lg-heading {
    // rem dziedziczy po elemencie root czyli po html, a element html ma domyślinie 16px, więc 6x16=96px
    font-size: 6rem;
  }

  &.sm-heading {
    margin-bottom: 2rem;
    // padding 0.2 rem top i bottom, 1 rem left i right
    padding: 0.2rem 1rem;
    // rozjaśniamy -> lighten jest właściwością SASS (bierze kolor i wartość rozjaśnienia jako parametry)
    // wstawiamy to wszystko w rgba żeby móc ustawić opacity, żeby widzieć tło(img) pod tym tłem
    background: rgba(lighten($primary-color, 2), 0.5);
  }
}

a {
  color: #fff;
  text-decoration: none;
}

header {
  // header  ma zawsze być na górze więc jego position musi być fixed
  position: fixed;
  // im większy z-index tym "bliżej monitora" jest obiekt (ułożone są warstwowo)
  z-index: 2;
  width: 100%;
}

.text-secondary {
  color: $secondary-color;
}

main {
  padding: 4rem;
  // height: 100%;
  // musimy zmienić height tak żeby footer był zawsze na dole strony, footer ma wysokość 60px więc:
  min-height: calc(100vh - 60px);
  // Ikony w klasie main jako childreny:
  .icons {
    margin-top: 1rem;

    a {
      padding: 0.4rem;

      &:hover {
        color: $secondary-color;
        @include easeOut();
      }
    }
  }

  &#home {
    // nie chcemy suwaków, dlatego overflow hidden
    overflow: hidden;

    h1 {
      // vh to viewport height, tutaj odległość to 20 ze 100 jednostek ułożonych poziomo
      // odwrotnością jest vw - viewport width, gdzie 100 jednostek ułożonych jest poziomo
      margin-top: 20vh;
    }
  }
}

// =========== To jest do About.html(@import "mobile" jest do wszystkiego) ===============

.about-info{
  display: grid;
  grid-gap: 30px;
  grid-template-areas: 
  'bioimage bio bio'
  'job1 job2 job3';
  grid-template-columns: repeat(3, 1fr);

  .bio-image{
    grid-area: bioimage;
    margin: auto;
    border-radius: 50%;
    border: $secondary-color 3px solid;
  }
  
  .bio{
    grid-area: bio;
    font-size: 1.5rem;
  }
  
  .job-1{
    grid-area: job1;
  }
  
  .job-2{
    grid-area: job2;
  }
  
  .job-3{
    grid-area: job3;
  }
  
  .job{
    background: lighten($primary-color, 5);
    padding: 0.5rem;
    border-bottom: $secondary-color 5px solid;  
  }
}

#main-footer{
  text-align: center;
  padding: 1rem;
  background: darken($primary-color, 10);
  color: set-text-color($primary-color);
  height: 60px; // żeby był zawsze na dole strony modyfikujemy wysokość elementu nad nim czyli main, patrz css wyżej dla main
}

@import "mobile";

